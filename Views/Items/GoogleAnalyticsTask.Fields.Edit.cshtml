@using PropertyBrokers.OrchardCore.WorkflowAdditions.GoogleAnalyticsManager
@model GoogleAnalyticsTaskViewModel

<div class="form-group" asp-validation-class-for="MeasurementId">
    <label for="MeasurementId" class="form-label">@T["Measurement ID"]</label>
    <input asp-for="MeasurementId" class="form-control code" />
    <span asp-validation-for="MeasurementId" class="text-danger"></span>
    <span class="hint">@T["The Measurement ID for your GA4 property (e.g., G-XXXXXXXXXX)."]</span>
</div>

<div class="form-group" asp-validation-class-for="ApiSecret">
    <label for="ApiSecret" class="form-label">@T["API Secret"]</label>
    <input asp-for="ApiSecret" type="password" class="form-control code" autocomplete="off" />
    <span asp-validation-for="ApiSecret" class="text-danger"></span>
    <span class="hint">@T["The API Secret for your GA4 property. Keep this confidential."]</span>
</div>

<div class="form-group" asp-validation-class-for="ClientId">
    <label for="ClientId" class="form-label">@T["Client ID"]</label>
    <input asp-for="ClientId" type="text" class="form-control code" />
    <span asp-validation-for="ClientId" class="text-danger"></span>
    <span class="hint">@T["The Client ID for this event. Leave blank to generate automatically."]</span>
</div>

<div class="form-group" asp-validation-class-for="EventName">
    <label for="EventName" class="form-label">@T["Event Name"]</label>
    <input asp-for="EventName" type="text" class="form-control code" />
    <span asp-validation-for="EventName" class="text-danger"></span>
    <span class="hint">@T["The name of the event to send. You can use workflow expressions here."]</span>
</div>

<div class="form-group" asp-validation-class-for="EventParamsExpression">
    <label for="EventParamsExpression" class="form-label">@T["Event Parameters Expression"]</label>
    <span class="hint">@T["The expression to build the event parameters object. You can use workflow expressions here. Matching the event in GA will yield best results."]</span>
    <textarea asp-for="EventParamsExpression" rows="5" class="form-control code"></textarea>
    <span asp-validation-for="EventParamsExpression" class="text-danger"></span>
</div>

<style asp-name="codemirror"></style>
<script asp-name="codemirror" depends-on="admin" at="Foot"></script>
<script asp-name="codemirror-mode-javascript" at="Foot"></script>
<script asp-name="codemirror-addon-mode-simple" at="Foot"></script>
<script asp-name="codemirror-addon-mode-multiplex" at="Foot"></script>
<script asp-name="codemirror-mode-xml" at="Foot"></script>
<script asp-src="~/OrchardCore.Liquid/codemirror/liquid.js" at="Foot"></script>

<script at="Foot">
    $(function () {
        var dataLayerEditor = CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(x => x.EventParamsExpression)'), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            mode: { name: "javascript", json: true },
        });

        // Example of the event parameters object
        var exampleEventParams = {
            form_id: "{{ Workflow.Properties.Form_Name }}",
            agent_id: "{{ Workflow.Properties.Agent_Id }}",
            branch_id: "{{ Workflow.Properties.Branch_Id }}",
            enquiry_type: "{{ Workflow.Properties.Enquiry_Type }}",
            property_reference: "{{ Workflow.Properties.Listing_Reference }}",
            page_url: "{{ Workflow.Properties.__Referring_Page }}",
            timestamp: "{{ 'Now' | date: 'o' }}"
        };

        // Create button and container
        var exampleButton = $('<button type="button" class="btn btn-secondary mt-2">Insert Example</button>');
        var buttonContainer = $('<div class="mb-5"></div>').append(exampleButton);

        // Add container after the editor
        $(dataLayerEditor.getWrapperElement()).after(buttonContainer);

        // Button click event
        exampleButton.on('click', function () {
            dataLayerEditor.setValue(JSON.stringify(exampleEventParams, null, 2));
        });
    });
</script>